'''
숙소는 긴 복도를 따라 총 400개의 방이 다음과 같이 배열되어 있다.
1   3   5   7
2   4   6   8


모든 학생들은 현재 위치에서 자신의 방으로 돌아가려고 하는데,
만약 두 학생이 자기방으로 돌아가면서 지나는 복도의 구간이 겹치면 두 학생은 동시에 돌아갈 수 없다.

예를 들어 (방1 -> 4) 와 (방3 -> 6) 은 복도 구간이 겹치므로 한 사람은 기다렸다가 다음 차례에 이동해야 한다.
이동하는 데에는 거리에 관계없이 단위 시간이 걸린다고 하자.

각 학생들의 현재 방 위치와 돌아가야 할 방의 위치의 목록이 주어질 때,
최소 몇 단위시간만에 모든 학생들이 이동할 수 있는지를 구하시오.

'''
'''
결과 리스트 생성[0, 0, 0, 0, ...](n+1개) 0번은 생각할 때 헷갈리니깐
start와 end를 결과 리스트의 인덱스로 만들어 그 값만 1씩 더해준다.
리스트 중 최고 값이 답이다.
'''

import sys
sys.stdin = open("swea_4408_자기방으로돌아가기.txt", "r")



test = int(input())

for t in range(1, test + 1):
    n = int(input())
    result = [0 for i in range(201)]  # 0이 200개 [0, 1 2 1 0 0 0 0 0]
    for i in range(n):
        s, e = map(int, input().split())
        s = s//2 if s % 2 == 0 else (s+1) // 2
        e = e//2 if s % 2 == 0 else (e+1) // 2      # s와 e를 각각의 인덱스로 변환

        if s > e:
            s, e = e, s                             # s 인덱스가 크면 뒤집기

        for k in range(s, e+1):
            result[k] = result[k] + 1

    print(f'#{t} {max(result)}')